# This workflow will build and push a new container image to Amazon ECR,
# and then will deploy a new task definition to Amazon ECS which will be run by Fargate when a release is created
name: Deploy to Staging Amazon ECS

on:
  push:
    branches:
      - main
    pull_request:

concurrency:
  group: ${{ github.ref  }}
  cancel-in-progress: true
jobs:
  build-image:
    name: Build image
    runs-on: ubuntu-latest
    environment: staging
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: upshot-appchain
          # IMAGE_TAG: ${{ github.sha }}
        run: |
          IMAGE_TAG=${GITHUB_SHA:0:8}
          BRANCH=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}

          if [[ $BRANCH != 'main' ]]; then
            IMAGE_TAG="dev-$IMAGE_TAG"
          fi

          # Build a docker container and push it to ECR so that it can be deployed to ECS.
          docker build --build-arg "GH_TOKEN=${{ secrets.GH_READONLY_PAT }}" -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
