syntax = "proto3";
package mint.v1beta1;

option go_package = "github.com/allora-network/allora-chain/x/mint/types";

import "gogoproto/gogo.proto";
import "cosmos_proto/cosmos.proto";
import "amino/amino.proto";

// Params defines the parameters for the x/mint module.
message Params {
  option (amino.name) = "allora-chain/x/mint/Params";

  // type of coin to mint
  string mint_denom = 1;
  // expected blocks per year
  uint64 blocks_per_year = 2;
  // maximum total supply of the coin
  string max_supply = 3 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true
  ];
  // ecosystem treasury fraction ideally emitted per unit time
  // this value includes precision: see f_emission_prec
  string f_emission = 4 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true
  ];
  // precision of the ecosystem treasury fraction
  // e.g. if f_emission is less than 1, this number should be
  // the number of decimal places in f_emission
  // if f_emission is greater than 1, this number should be 0
  uint64 f_emission_prec = 5;
  // exponential moving average smoothing factor for one month
  // this value includes precision: see one_month_smoothing_prec
  string one_month_smoothing_degree = 6 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true
  ];
  // precision of the smoothing factor
  // e.g. if one_month_smoothing_degree is less than 1, this number should be
  // the number of decimal places in one_month_smoothing_degree
  // if one_month_smoothing_degree is greater than 1, this number should be 0
  uint64 one_month_smoothing_degree_prec = 7;
}
